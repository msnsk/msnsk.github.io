<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Godot4 on Peanuts Code</title>
    <link>http://localhost:1313/en/tags/godot4/</link>
    <description>Recent content in Godot4 on Peanuts Code</description>
    <image>
      <title>Peanuts Code</title>
      <url>http://localhost:1313/images/logomark.png</url>
      <link>http://localhost:1313/images/logomark.png</link>
    </image>
    <generator>Hugo -- 0.133.0</generator>
    <language>en</language>
    <lastBuildDate>Fri, 23 Aug 2024 13:55:22 +0900</lastBuildDate>
    <atom:link href="http://localhost:1313/en/tags/godot4/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ðŸ¤– Making a Tilemap with TileMapLayer</title>
      <link>http://localhost:1313/en/tutorials/gd0024_tilemaplayer/</link>
      <pubDate>Fri, 23 Aug 2024 13:55:22 +0900</pubDate>
      <guid>http://localhost:1313/en/tutorials/gd0024_tilemaplayer/</guid>
      <description>Introduction With Godot 4.3, the previously used TileMap class has been deprecated (meaning it won&amp;rsquo;t be updated anymore), and a new TileMapLayer class has been added in its place. So, I&amp;rsquo;m going to actually create a tilemap using TileMapLayer!
My environment at the time of writing Godot version: 4.3
Computer model: MacBook Air M1, 2020
OS: macOS 14.6.1
Setting the Screen Size I&amp;rsquo;ll be using 16x16 px tile images this time, so I&amp;rsquo;ll make the Viewport small enough to fit the tiles neatly. After creating a new project, I went to Project Settings &amp;gt; General tab &amp;gt; Window and set the following:
Size: Viewport Width: 256 Viewport Height: 160 Window Width Override: 1024 (4 times) Window Height Override: 640 (4 times) *Window Width Override and Window Height Override can be set after enabling Advanced Settings in the top right of the settings panel. Then I scrolled down a bit in the settings panel and set the stretch mode to viewport so that the game graphics scale to fit the window size. I left the aspect ratio as is.
Stretch: Mode: viewport Aspect: keep (default) Scale: 1 (default) Scale Mode: fractional (default) Importing Assets for Tiles I downloaded the 1-Bit Pack from KENNEY .</description>
    </item>
    <item>
      <title>ðŸ¤– Adding a Game Center Plugin to Your Project</title>
      <link>http://localhost:1313/en/tutorials/gd0021_game_center_plugin/</link>
      <pubDate>Sun, 05 May 2024 20:17:00 +0900</pubDate>
      <guid>http://localhost:1313/en/tutorials/gd0021_game_center_plugin/</guid>
      <description>Introduction In this article, I&amp;rsquo;ll show you how to add the official Godot plugin for integrating with Apple&amp;rsquo;s Game Center to your project.
First off, what is Game Center? For those unfamiliar, itâ€™s a feature available on iOS devices like iPhones and iPads. By signing in with an Apple ID, Game Center records achievements and allows players to compete on leaderboards in supported games. Developers can set achievements, define their completion criteria, and decide what to compete for on the leaderboards.
Using the Game Center plugin in Godot, you can easily integrate these features into your games, which is pretty awesome.
By the way, you can find the official documentation and source code at the Godot iOS plugins repository , so take a look there first. If there&amp;rsquo;s anything you don&amp;rsquo;t quite understand, you can always come back to this article.
Author&amp;#39;s Environment at the Time of Writing Godot Version: 4.2.1
Computer Model: MacBook Air M1, 2020
OS: macOS 14.4.1
Clone the Plugin Repository First, head over to this Github page and follow the steps there. However, theyâ€™re not very detailed, so I&amp;rsquo;ll explain the nitty-gritty parts here.</description>
    </item>
  </channel>
</rss>
