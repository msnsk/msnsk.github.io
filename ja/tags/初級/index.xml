<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>初級 on Peanuts Code</title>
    <link>https://www.peanuts-code.com/ja/tags/%E5%88%9D%E7%B4%9A/</link>
    <description>Recent content in 初級 on Peanuts Code</description>
    <image>
      <url>https://www.peanuts-code.com/105</url>
      <link>https://www.peanuts-code.com/105</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Fri, 08 Apr 2022 19:42:19 +0900</lastBuildDate><atom:link href="https://www.peanuts-code.com/ja/tags/%E5%88%9D%E7%B4%9A/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Godot をダウンロードする</title>
      <link>https://www.peanuts-code.com/ja/tutorials/gd0001_download/</link>
      <pubDate>Mon, 25 Oct 2021 00:15:11 +0900</pubDate>
      
      <guid>https://www.peanuts-code.com/ja/tutorials/gd0001_download/</guid>
      <description>ゲームエンジン Godot のダウンロード手順を解説</description>
    </item>
    
    <item>
      <title>Godot のプロジェクトマネージャー</title>
      <link>https://www.peanuts-code.com/ja/tutorials/gd0002_project_manager/</link>
      <pubDate>Sat, 30 Oct 2021 12:30:09 +0900</pubDate>
      
      <guid>https://www.peanuts-code.com/ja/tutorials/gd0002_project_manager/</guid>
      <description>ゲームエンジン Godot のプロジェクトマネージャーでできる操作のあれこれを解説</description>
    </item>
    
    <item>
      <title>Godot の言語設定</title>
      <link>https://www.peanuts-code.com/ja/tutorials/gd0003_change_language/</link>
      <pubDate>Mon, 01 Nov 2021 12:37:47 +0900</pubDate>
      
      <guid>https://www.peanuts-code.com/ja/tutorials/gd0003_change_language/</guid>
      <description>Godot で表示される言語の設定を変更する手順について解説</description>
    </item>
    
    <item>
      <title>シリーズ：Godot で作るブロック崩し</title>
      <link>https://www.peanuts-code.com/ja/tutorials/gd0004_breakout/</link>
      <pubDate>Mon, 10 Jan 2022 00:18:03 +0900</pubDate>
      
      <guid>https://www.peanuts-code.com/ja/tutorials/gd0004_breakout/</guid>
      <description>このシリーズでは昔懐かしのブロック崩しを開発しながら、Godot でのゲーム開発の基本を学んでいく。ゲーム開発初心者の方、Godot エンジン初心者の方には特にお勧めのチュートリアルである。</description>
    </item>
    
    <item>
      <title>シリーズ：Godot で作るプラットフォーマー</title>
      <link>https://www.peanuts-code.com/ja/tutorials/gd0005_platformer/</link>
      <pubDate>Fri, 08 Apr 2022 19:42:19 +0900</pubDate>
      
      <guid>https://www.peanuts-code.com/ja/tutorials/gd0005_platformer/</guid>
      <description>*シリーズ随時追加作成中 
このチュートリアルシリーズでは、Godot を使ってプラットフォーマーというジャンルのゲームを開発する。スーパーマリオシリーズに代表されるオーソドックスな横スクロールアクションゲームで、特に海外で根強い人気がある。ゲーム開発初心者の方、Godot エンジン初心者の方にお勧めの初級〜中級のチュートリアル。</description>
    </item>
    
    <item>
      <title>Godot で作るブロック崩し Part 1：パドルを作って動かそう！</title>
      <link>https://www.peanuts-code.com/ja/tutorials/gd0004_breakout/breakout_1/</link>
      <pubDate>Sat, 06 Nov 2021 17:44:27 +0900</pubDate>
      
      <guid>https://www.peanuts-code.com/ja/tutorials/gd0004_breakout/breakout_1/</guid>
      <description>Part 1 の今回は、ゲームのプレイ画面にパドルを配置して動かすところまでやっていく。</description>
    </item>
    
    <item>
      <title>Godot で作るブロック崩し Part 2：ボールを作って発射しよう！</title>
      <link>https://www.peanuts-code.com/ja/tutorials/gd0004_breakout/breakout_2/</link>
      <pubDate>Sat, 06 Nov 2021 23:11:01 +0900</pubDate>
      
      <guid>https://www.peanuts-code.com/ja/tutorials/gd0004_breakout/breakout_2/</guid>
      <description>Part 2 の今回は、ボールのオブジェクトを作って、パドルからボールを発射するところまで進めていく。</description>
    </item>
    
    <item>
      <title>Godot で作るブロック崩し Part 3：壁を作ってボールを跳ね返らせよう！</title>
      <link>https://www.peanuts-code.com/ja/tutorials/gd0004_breakout/breakout_3/</link>
      <pubDate>Tue, 09 Nov 2021 16:21:24 +0900</pubDate>
      
      <guid>https://www.peanuts-code.com/ja/tutorials/gd0004_breakout/breakout_3/</guid>
      <description>Part 3 の今回は、壁を作って、ボールがその壁に衝突したら跳ね返るようにしていく。ただし、画面下部には壁は作らずにボールが落ちるようにする。</description>
    </item>
    
    <item>
      <title>Godot で作るブロック崩し Part 4：ブロックを配置してボールを当てて消そう！</title>
      <link>https://www.peanuts-code.com/ja/tutorials/gd0004_breakout/breakout_4/</link>
      <pubDate>Wed, 10 Nov 2021 17:05:50 +0900</pubDate>
      
      <guid>https://www.peanuts-code.com/ja/tutorials/gd0004_breakout/breakout_4/</guid>
      <description>Part 4 の今回は、ブロックのオブジェクトを作って、それを画面上に複数配置し、ボールがそのブロックに衝突したらブロックが消えるようにしていく。</description>
    </item>
    
    <item>
      <title>Godot で作るブロック崩し Part 5：細かい更新をしてゲーム性を高めよう！</title>
      <link>https://www.peanuts-code.com/ja/tutorials/gd0004_breakout/breakout_5/</link>
      <pubDate>Wed, 17 Nov 2021 12:23:06 +0900</pubDate>
      
      <guid>https://www.peanuts-code.com/ja/tutorials/gd0004_breakout/breakout_5/</guid>
      <description>Part 5 の今回は、パドルが壁を通過してしまう問題の修正、衝突するたびにボールのスピードが上がる仕様に変更、プレイヤーの操作でボールが発射される仕様に変更、パドル上のボールが当たった位置によってボールの反射角度が変わる仕様に変更、ついて更新していく。</description>
    </item>
    
    <item>
      <title>Godot で作るブロック崩し Part 6：ゲームスタート/ゲームオーバーの画面を作ろう！</title>
      <link>https://www.peanuts-code.com/ja/tutorials/gd0004_breakout/breakout_6/</link>
      <pubDate>Sun, 21 Nov 2021 13:39:21 +0900</pubDate>
      
      <guid>https://www.peanuts-code.com/ja/tutorials/gd0004_breakout/breakout_6/</guid>
      <description>Part 6 の今回は、ゲームスタート画面とゲームオーバーの画面を作り、それらとプレイ画面との間で適宜、画面が遷移するようにしていく。</description>
    </item>
    
    <item>
      <title>Godot で作るブロック崩し Part 7：HUDを作って表示内容を更新してみよう！</title>
      <link>https://www.peanuts-code.com/ja/tutorials/gd0004_breakout/breakout_7/</link>
      <pubDate>Tue, 23 Nov 2021 23:45:05 +0900</pubDate>
      
      <guid>https://www.peanuts-code.com/ja/tutorials/gd0004_breakout/breakout_7/</guid>
      <description>Part 7 の今回は、HUD（ヘッドアップディスプレイ）を作っていく。HUD というのは、例えば、プレイヤーのライフゲージやスコア、残り時間、レベル（ステージ）の番号などのように、ゲームプレイ画面に常に表示されているもののことだ。</description>
    </item>
    
    <item>
      <title>Godot で作るブロック崩し Part 8：ポーズ画面を作ろう！</title>
      <link>https://www.peanuts-code.com/ja/tutorials/gd0004_breakout/breakout_8/</link>
      <pubDate>Mon, 29 Nov 2021 17:02:30 +0900</pubDate>
      
      <guid>https://www.peanuts-code.com/ja/tutorials/gd0004_breakout/breakout_8/</guid>
      <description>Part 8 の今回は、ゲームをプレイ中にポーズ（一時停止）する機能とポーズ画面を作っていく。といっても作業はこれまでのおさらい的内容が多くなっているので、気楽にやってみてほしい。</description>
    </item>
    
    <item>
      <title>Godot で作るブロック崩し Part 9：アニメーションを追加しよう！</title>
      <link>https://www.peanuts-code.com/ja/tutorials/gd0004_breakout/breakout_9/</link>
      <pubDate>Thu, 02 Dec 2021 22:49:34 +0900</pubDate>
      
      <guid>https://www.peanuts-code.com/ja/tutorials/gd0004_breakout/breakout_9/</guid>
      <description>Part 9 の今回は、ブロック崩しの一部の要素にアニメーションを追加する。全てのオブジェクトをアニメーションさせると作業量が膨大になるので、今回はパドルとブロックに対象を絞ってに簡単なアニメーションを追加していく。</description>
    </item>
    
    <item>
      <title>Godot で作るブロック崩し Part 10：パワーアップアイテムをドロップさせよう！</title>
      <link>https://www.peanuts-code.com/ja/tutorials/gd0004_breakout/breakout_10/</link>
      <pubDate>Thu, 02 Dec 2021 22:49:34 +0900</pubDate>
      
      <guid>https://www.peanuts-code.com/ja/tutorials/gd0004_breakout/breakout_10/</guid>
      <description>Part 10 の今回は、ブロック崩しにパワーアップアイテムを追加していく。ブロックを崩すとアイテムが落ちてきて、パドルとアイテムが衝突するとパワーアップが適用される、という仕組みの部分を実装していこう。</description>
    </item>
    
    <item>
      <title>Godot で作るブロック崩し Part 11：パワーアップを実装しよう！</title>
      <link>https://www.peanuts-code.com/ja/tutorials/gd0004_breakout/breakout_11/</link>
      <pubDate>Sat, 11 Dec 2021 13:36:54 +0900</pubDate>
      
      <guid>https://www.peanuts-code.com/ja/tutorials/gd0004_breakout/breakout_11/</guid>
      <description>Part 11 の今回は、ブロック崩しにパワーアップ機能を実装していく。前回の Part 11 でブロックを消すとパワーアップアイテムが落ちてきて、パドルとアイテムが衝突するとパワーアップが適用される、という仕組みの部分を作ったので、今回は個々のパワーアップ機能自体を実装する。</description>
    </item>
    
    <item>
      <title>Godot で作るブロック崩し Part 12：BGMとサウンドエフェクトを追加しよう！</title>
      <link>https://www.peanuts-code.com/ja/tutorials/gd0004_breakout/breakout_12/</link>
      <pubDate>Sun, 19 Dec 2021 00:21:13 +0900</pubDate>
      
      <guid>https://www.peanuts-code.com/ja/tutorials/gd0004_breakout/breakout_12/</guid>
      <description>Part 12 の今回は、ブロック崩しにBGMとサウンドエフェクト（効果音）を追加していく。今回のチュートリアルにはいつもの GIF ではなく mp4 の動画を載せている。この記事の閲覧環境は様々だと思われるため、デフォルトでは音をミュートしている。動画のコントローラでミュート解除していただきつつ、確認いただければと思う。</description>
    </item>
    
    <item>
      <title>Godot で作るブロック崩し Part 13：ハイスコアのデータを保存しよう！</title>
      <link>https://www.peanuts-code.com/ja/tutorials/gd0004_breakout/breakout_13/</link>
      <pubDate>Thu, 23 Dec 2021 16:55:59 +0900</pubDate>
      
      <guid>https://www.peanuts-code.com/ja/tutorials/gd0004_breakout/breakout_13/</guid>
      <description>Part 13 の今回は、ブロック崩しの HUD にハイスコア、ハイレベル（過去最高クリアレベルのことをこう呼ぶことにする）の要素を追加し、ゲームオーバーになった時点でそのデータが自動的に保存されるようにして、一度ゲームを終了しても記録が消えない仕組みを作っていく。</description>
    </item>
    
    <item>
      <title>Godot で作るブロック崩し Part 14：ブロックの種類を増やしてレベルをデザインしよう！</title>
      <link>https://www.peanuts-code.com/ja/tutorials/gd0004_breakout/breakout_14/</link>
      <pubDate>Fri, 31 Dec 2021 02:09:21 +0900</pubDate>
      
      <guid>https://www.peanuts-code.com/ja/tutorials/gd0004_breakout/breakout_14/</guid>
      <description>Part 14 の今回は、ブロック崩しのブロックの種類を増やして、複数のレベル（ステージ）をデザインしていく。併せてゲームクリア画面も作成する。</description>
    </item>
    
    <item>
      <title>Godot で作るブロック崩し Part 15：プロジェクトをエクスポートしよう！</title>
      <link>https://www.peanuts-code.com/ja/tutorials/gd0004_breakout/breakout_15/</link>
      <pubDate>Mon, 10 Jan 2022 00:18:03 +0900</pubDate>
      
      <guid>https://www.peanuts-code.com/ja/tutorials/gd0004_breakout/breakout_15/</guid>
      <description>Part 15 の今回は、これまで開発してきたブロック崩しのプロジェクトをエクスポートして、開発者以外にもプレイしてもらえるようにする。エクスポートの作業は基本的に、ゲームが完成した段階でそのゲームを配布するために行う。</description>
    </item>
    
    <item>
      <title>Godot で作るプラットフォーマー Part 1：プレイヤーキャラクターを作ろう！</title>
      <link>https://www.peanuts-code.com/ja/tutorials/gd0005_platformer/platformer_1/</link>
      <pubDate>Sat, 29 Jan 2022 23:38:27 +0900</pubDate>
      
      <guid>https://www.peanuts-code.com/ja/tutorials/gd0005_platformer/platformer_1/</guid>
      <description>このチュートリアルシリーズでは、スーパーマリオのような横スクロールアクションゲーム、いわゆる「プラットフォーマー」というジャンルのゲームを作っていく。今回は、初回ということで、ゲームのプレイ画面にプレイヤーキャラクターを用意して操作するところまでやってみよう。
 Memo:</description>
    </item>
    
    <item>
      <title>Godot で作るプラットフォーマー Part 2：タイルマップを作ろう！</title>
      <link>https://www.peanuts-code.com/ja/tutorials/gd0005_platformer/platformer_2/</link>
      <pubDate>Fri, 04 Feb 2022 13:30:38 +0900</pubDate>
      
      <guid>https://www.peanuts-code.com/ja/tutorials/gd0005_platformer/platformer_2/</guid>
      <description>今回は、第2回ということで、ゲームのプレイ画面にタイルマップを配置してプレイヤーが動き回る舞台を作っていく。
なお、タイルマップについては、公式ドキュメントでも説明があるので、併せて確認いただくのが良いだろう。
 公式オンラインドキュメント：</description>
    </item>
    
    <item>
      <title>Godot で作るプラットフォーマー Part 3：カメラを追加しよう！</title>
      <link>https://www.peanuts-code.com/ja/tutorials/gd0005_platformer/platformer_3/</link>
      <pubDate>Sat, 05 Feb 2022 17:16:51 +0900</pubDate>
      
      <guid>https://www.peanuts-code.com/ja/tutorials/gd0005_platformer/platformer_3/</guid>
      <description>第3回目の今回は、プレイヤーキャラクターの動きに合わせてカメラが移動し、Part 2 の時より広いタイルマップ上をキャラクターが移動できるようにしていく。</description>
    </item>
    
    <item>
      <title>Godot で作るプラットフォーマー Part 4：敵キャラクターを作ろう！</title>
      <link>https://www.peanuts-code.com/ja/tutorials/gd0005_platformer/platformer_4/</link>
      <pubDate>Thu, 10 Feb 2022 01:41:29 +0900</pubDate>
      
      <guid>https://www.peanuts-code.com/ja/tutorials/gd0005_platformer/platformer_4/</guid>
      <description>第4回目の今回は、敵キャラクターの雛形となるシーンを作成し、それを継承する形で個別の敵キャラクターを一つ作っていく。そのあと、その敵キャラクターをレベルシーンに配置して、プレイヤーキャラクターに踏まれたら消えるところまで実装してみよう。
 Memo：</description>
    </item>
    
    <item>
      <title>Godot で作るプラットフォーマー Part 5：さらに敵キャラクターを作ろう！</title>
      <link>https://www.peanuts-code.com/ja/tutorials/gd0005_platformer/platformer_5/</link>
      <pubDate>Fri, 18 Feb 2022 15:00:38 +0900</pubDate>
      
      <guid>https://www.peanuts-code.com/ja/tutorials/gd0005_platformer/platformer_5/</guid>
      <description>第5回目の今回は、さらに敵キャラクターの種類を増やしていく。それぞれの敵キャラクターの動きに違いを持たせ、それらをタイルマップ上に複数配置してゲームの難易度を高めていこう。具体的に今回は以下の敵キャラクターを作成していく。
 バニー（うさぎ） カメレオン プラント（植物）   Memo：</description>
    </item>
    
    <item>
      <title>Godot で作るプラットフォーマー Part 6：アイテムを作ろう！</title>
      <link>https://www.peanuts-code.com/ja/tutorials/gd0005_platformer/platformer_6/</link>
      <pubDate>Sat, 19 Feb 2022 16:17:02 +0900</pubDate>
      
      <guid>https://www.peanuts-code.com/ja/tutorials/gd0005_platformer/platformer_6/</guid>
      <description>第6回目の今回は、アイテムを作る。アイテムというのは、ちょうどスーパーマリオシリーズのコインのような、当たるとポイントを獲得できてちょっと嬉しい存在だ。さらに、下から小突くとアイテムが出てくる箱、その名もアイテムボックスを作る。それぞれスクリプトで動作を制御し、最後はレベルシーンに配置するところまでやっていこう。
 Memo：</description>
    </item>
    
    <item>
      <title>Godot で作るプラットフォーマー Part 7：次のレベルに遷移させよう！</title>
      <link>https://www.peanuts-code.com/ja/tutorials/gd0005_platformer/platformer_7/</link>
      <pubDate>Thu, 03 Mar 2022 15:11:20 +0900</pubDate>
      
      <guid>https://www.peanuts-code.com/ja/tutorials/gd0005_platformer/platformer_7/</guid>
      <description>第7回目の今回は、レベルのマップ上にスタートポイント、中間のチェックポイント、そしてエンドポイントを配置し、エンドポイントに到達した時に次のレベルに遷移する仕組みを実装していく。併せて、現在レベルシーンは「Level1」だけなので、次の「Level2」シーンも作成していく。
 Memo：</description>
    </item>
    
    <item>
      <title>Godot で作るプラットフォーマー Part 8：HUD を追加しよう！</title>
      <link>https://www.peanuts-code.com/ja/tutorials/gd0005_platformer/platformer_8/</link>
      <pubDate>Fri, 04 Mar 2022 13:16:21 +0900</pubDate>
      
      <guid>https://www.peanuts-code.com/ja/tutorials/gd0005_platformer/platformer_8/</guid>
      <description>第8回目の今回は、HUD を実装していく。
HUD というのは、ヘッズアップディスプレイ（Heads Up Display）の略で、ゲームプレイ中に常に画面上に表示されている UI の一つだ。例えば、プレイヤーの残りのライフ（海外での呼称 Health に合わせてこれ以降はヘルスと呼ぶ）や、獲得したスコアなどがわかりやすいだろう。HUD を実装する目的は現在のゲームの状態を視覚的にわかりやすくすることだ。</description>
    </item>
    
    <item>
      <title>Godot で作るプラットフォーマー Part 9：ゲームオーバーの仕組みを作ろう！</title>
      <link>https://www.peanuts-code.com/ja/tutorials/gd0005_platformer/platformer_9/</link>
      <pubDate>Mon, 14 Mar 2022 01:59:44 +0900</pubDate>
      
      <guid>https://www.peanuts-code.com/ja/tutorials/gd0005_platformer/platformer_9/</guid>
      <description>第9回目の今回は、ゲームオーバーの仕組みを実装していく。
世に出ているプラットフォーマーゲームにはほぼ確実にゲームオーバーの仕組みが存在する。ゲームオーバーになるかもしれない緊張感がなければプラットフォーマーの面白さは激減する。だから、ゲームオーバーの実装は必要不可欠だ。さらに、ゲームオーバーの条件設定もまたゲームの難易度を左右するため非常に重要だ。
一般的にゲームオーバーの条件としては、敵や敵の攻撃に一回でも当たるか、当たってヘルス（ライフ）が 0 になるか、画面下部に落下した時などにゲームオーバーになることが多い。</description>
    </item>
    
    <item>
      <title>Godot で作るプラットフォーマー Part 10：スタート画面を作ろう！</title>
      <link>https://www.peanuts-code.com/ja/tutorials/gd0005_platformer/platformer_10/</link>
      <pubDate>Tue, 22 Mar 2022 17:32:43 +0900</pubDate>
      
      <guid>https://www.peanuts-code.com/ja/tutorials/gd0005_platformer/platformer_10/</guid>
      <description>第10回目の今回は、ゲーム開始時に表示されるスタート画面を作る。タイトル画面、スタートメニューとも言う。
それだけだと、前回と比べて簡単すぎるので、ゲーム開始時にプレイヤーキャラクターを選択できる仕組みも実装する。画面遷移のイメージは以下の通りだ。
 まずゲームを始めるとスタート画面が表示される。 スタートボタンを押すとプレイヤーキャラクター選択画面に遷移する。 プレイヤーキャラクターを選択するとゲームプレイ開始。  ということで、今回の作業は以下の通りだ。</description>
    </item>
    
    <item>
      <title>Godot で作るプラットフォーマー Part 11：背景を作ろう！</title>
      <link>https://www.peanuts-code.com/ja/tutorials/gd0005_platformer/platformer_11/</link>
      <pubDate>Fri, 25 Mar 2022 22:31:30 +0900</pubDate>
      
      <guid>https://www.peanuts-code.com/ja/tutorials/gd0005_platformer/platformer_11/</guid>
      <description>第11回目の今回は、ゲームプレイ画面の背景を作る。
背景と言っても、ただテクスチャ画像を一枚ペタリと貼り付けて終わりだと面白くない。それに、カメラがどれだけ動いても背景が途切れなく繋がっている状態を作るには、ちょっとした工夫（というか Godot の機能）が必要だ。</description>
    </item>
    
    <item>
      <title>Godot で作るプラットフォーマー Part 12：光と影を演出しよう！</title>
      <link>https://www.peanuts-code.com/ja/tutorials/gd0005_platformer/platformer_12/</link>
      <pubDate>Sat, 26 Mar 2022 00:25:27 +0900</pubDate>
      
      <guid>https://www.peanuts-code.com/ja/tutorials/gd0005_platformer/platformer_12/</guid>
      <description>第12回目の今回は、ゲームプレイ画面に光と影の演出、というテーマでやっていく。前回に引き続き、ビジュアル面でのゲームのアップデートだ。結果が目に見えてわかりやすいのと、今回もスクリプト不要の内容なので、気楽にやっていこう。
 Memo：</description>
    </item>
    
    <item>
      <title>Godot で作るプラットフォーマー Part 13：サウンドを追加しよう！</title>
      <link>https://www.peanuts-code.com/ja/tutorials/gd0005_platformer/platformer_13/</link>
      <pubDate>Fri, 08 Apr 2022 19:42:19 +0900</pubDate>
      
      <guid>https://www.peanuts-code.com/ja/tutorials/gd0005_platformer/platformer_13/</guid>
      <description>第13回目の今回は、ゲームにサウンドを追加する。ゲームに使われるサウンドというのは、大きく分けて2種類ある。バックグラウンドミュージック（BGM）と効果音（サウンドエフェクト：SFX）だ。Godot Engine ではどちらも追加する方法に大きな違いはない。素材さえ用意すれば、追加するのは比較的簡単だ。特定のタイミングでサウンドを鳴らしたい時、例えば、プレイヤーキャラクターがジャンプした時にジャンプの効果音を鳴らしたい場合などには、プログラミングして制御する必要があるが、複雑なコードにはならないので安心してほしい。</description>
    </item>
    
  </channel>
</rss>
